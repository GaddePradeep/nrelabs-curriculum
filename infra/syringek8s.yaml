---
# TODO(mierdin): This could probably use some pruning
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: syringerole
# rules:
# - apiGroups:
#   - ""
#   - "extensions"
#   - "customresourcedefinitions"
#   resources:
#   - pods
#   - services
#   - networks
#   - namespaces
#   - customresourcedefinitions
#   verbs:
#   - create
#   - list
#   - get
#   - delete
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'


---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: syringe-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: syringerole
subjects:
  - kind: ServiceAccount
    name: syringesa
    namespace: default

---
apiVersion: v1
kind: Pod
metadata:
  name: syringe
  labels:
    app: syringe
    antidote_role: infra
spec:
  
  # Might need an admission controller for this
  serviceAccount: syringesa
  containers:
  - name: syringe
    image: antidotelabs/syringe:latest
    imagePullPolicy: Always
    env:
    - name: SYRINGE_LESSONS
      value: "/lessons"
    ports:
    - containerPort: 50099
    - containerPort: 8086
    volumeMounts:
      - name: lessons
        mountPath: /lessons
  volumes:
    - name: lessons
      hostPath:
        path: /home/mierdin/antidote/lessons

# /var/run/secrets/kubernetes.io/serviceaccount

# kubectl create serviceaccount syringesa
# kubectl describe serviceaccount syringesa
# kubectl get secret syringesa-token-hjdjv -oyaml

---
kind: Service
apiVersion: v1
metadata:
  name: syringe-service
  namespace: default
spec:
  selector:
    app: syringe
  ports:
    - name: grpc
      port: 50099
      targetPort: 50099
      nodePort: 30010
    - name: http
      port: 8086
      targetPort: 8086
      nodePort: 30011
  type: NodePort

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/ssl-services: "syringe-service"
    ingress.kubernetes.io/ssl-redirect: "false"
    ingress.kubernetes.io/force-ssl-redirect: "false"
    ingress.kubernetes.io/rewrite-target: "/"
    nginx.ingress.kubernetes.io/rewrite-target: "/"
    # ingress.kubernetes.io/limit-connections
    # ingress.kubernetes.io/limit-rps
  name: syringe-ingress
  namespace: default
spec:
  tls:
    - hosts:
      - labs.networkreliability.engineering
      secretName: tls-certificate
  rules:
  - host: labs.networkreliability.engineering
    http:
      paths:
      - path: "/syringe"
        backend:
          serviceName: syringe-service
          servicePort: 8086

