---

- name: Setup DB
  hosts: db_hosts
  vars:
    ansible_ssh_private_key_file: ~/.ssh/google_compute_engine
  become: yes
  gather_facts: no
  tasks:
    - name: Install postgres
      package:
        name: "{{ item }}"
        state: latest
      with_items:
        - postgresql-server
        - postgresql-contrib

    - name: Init DB cluster
      shell: postgresql-setup initdb
      ignore_errors: yes

    - name: Install pg_hba config
      template:
        src: templates/pg_hba.conf.j2
        dest:  /var/lib/pgsql/data/pg_hba.conf
        owner: postgres
        group: postgres
        mode: 0600

    - name: Enable and restart postgresql
      service:
        name: postgresql
        state: restarted
        enabled: yes

- name: Prep instances (sudo)
  hosts: container_hosts
  become: yes
  vars:
    ansible_ssh_private_key_file: ~/.ssh/google_compute_engine
  gather_facts: yes
  tasks:
    - name: Install deps
      package:
        name: "{{ item }}"
        state: latest
      with_items:
        - epel-release
        - python-pip
        - git
        - htop

    # sudo yum upgrade python*
  
    # - name: Install pip deps
    #   pip:
    #     name: "{{ item }}"
    #   with_items:
    #     - docker-compose

    # TODO should only do this if not installed.
    # - name: Install Docker
    #   shell: curl -fsSL https://get.docker.com/ | sh

    # - name: Start Docker
    #   shell: "{{ item }}"
    #   with_items:
    #     - systemctl enable docker
    #     - systemctl start docker

    #TODO configure sudoless docker

    # TODO NOT currently persistent across reboots. Need to do this.
    # echo "loop" | sudo tee /etc/modules-load.d/loop.conf   -----maybe?
    - name: Set up hugepages
      shell: sysctl vm.nr_hugepages=1024

    # TODO Doesn't seem to be working. Still have to run this myself. Also should make this persistent too.
    - name: Load loop kernel module
      shell: modprobe loop

    # This caused problems installing contrail since docker-py is already installed, and we also installed docker.
    # need to probably redo this and only install docker-py
    # and monky patch it the way you were going to
    #
    # - name: Monkey-patch docker-py
    #   shell: "{{ item }}"
    #   with_items:
    #   - pip uninstall docker-py --no-cache-dir
    #   - pip install docker==3.1.4
    #   - pip install logconfig
    #   - pip install docker

# We are doing this in a separate play becuase for now, we don't need to copy
# the image to all of our hosts, since we're not running kubernetes yet. Just
# a single host is fine for now.
- name: Copy vMX image
  hosts: container_hosts
  # hosts: tf-controller0.labs.networkreliability.engineering
  vars:
    ansible_ssh_private_key_file: ~/.ssh/google_compute_engine
  gather_facts: no
  tasks:

    - name: Create directory for vMX files
      file:
        path: ~/myfiles
        state: directory
        mode: 0755

    - stat: path=~/myfiles/junos-vmx-x86-64-18.1R1.9.qcow2
      register: image_exists

    - debug:
        msg: "{{ image_exists }}"

    # - name: Copy vMX image to instance (please be patient)
    #   copy:
    #     src: ./junos-vmx-x86-64-18.1R1.9.qcow2
    #     dest: ~/myfiles/junos-vmx-x86-64-18.1R1.9.qcow2
    #   when: image_exists.stat.exists == False

- name: Finish prep
  hosts: container_hosts
  vars:
    ansible_ssh_private_key_file: ~/.ssh/google_compute_engine
  gather_facts: no
  tasks:

    - stat: path=~/.ssh/id_rsa.pub
      register: ssh_key_exists

    - debug:
        msg: "{{ ssh_key_exists }}"

    - name: Copy public SSH key to vMX
      shell: ssh-keygen -b 2048 -t rsa -f ~/.ssh/id_rsa -q -N ""
      when: ssh_key_exists.stat.exists == False

    - stat: path=~/myfiles/id_rsa.pub
      register: ssh_key_copied

    - debug:
        msg: "{{ ssh_key_copied }}"

    - name: Copy public SSH key to vMX
      shell: cp ~/.ssh/id_rsa.pub ~/myfiles/id_rsa.pub
      when: ssh_key_copied.stat.exists == False

    - name: Download vMX eval
      shell: curl -o ~/myfiles/license-eval.txt https://www.juniper.net/us/en/dm/free-vmx-trial/E421992502.txt

    - name: Remove antidote repo
      shell: rm -rf ~/antidote

    - name: Clone antidote repo to instance
      git:
        repo: 'https://github.com/nre-learning/antidote'
        dest: ~/antidote/
        force: yes

    - name: Copy SSH keys to lessons dir
      shell: mkdir -p ~/antidote/lessons/ssh && cp ~/.ssh/id_rsa ~/antidote/lessons/ssh/id_rsa && cp -r ~/.ssh/id_rsa.pub ~/antidote/lessons/ssh/id_rsa.pub

- name: Install Kubernetes, Tungsten, and dependencies
  hosts: container_hosts
  become: yes
  vars:
    orchestrator: kubernetes
  gather_facts: yes
  roles:
    - configure_instances
    - { role: install_contrail, when: skip_contrail is not defined or not skip_contrail|bool }
  vars_files:
    - "_ansible_contrail_config.yaml"
  environment:
    - https_proxy: "{{ contrail_configuration.HTTPS_PROXY | default('') }}"
    - http_proxy: "{{ contrail_configuration.HTTP_PROXY | default('') }}"




